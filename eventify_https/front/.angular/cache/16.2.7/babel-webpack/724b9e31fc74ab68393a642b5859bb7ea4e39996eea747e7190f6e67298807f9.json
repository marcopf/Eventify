{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/events.service\";\nimport * as i2 from \"../services/api-call.service\";\nimport * as i3 from \"../services/general-func.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../event-card/event-card.component\";\nimport * as i7 from \"../loader/loader.component\";\nfunction EventDisplayComponent_app_loader_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loader\");\n  }\n}\nfunction EventDisplayComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction EventDisplayComponent_div_3_app_event_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-event-card\", 6);\n  }\n  if (rf & 2) {\n    const el_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"el\", el_r6);\n  }\n}\nfunction EventDisplayComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\nfunction EventDisplayComponent_div_3_app_loader_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loader\");\n  }\n}\nfunction EventDisplayComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, EventDisplayComponent_div_3_app_event_card_1_Template, 1, 1, \"app-event-card\", 4);\n    i0.ɵɵtemplate(2, EventDisplayComponent_div_3_div_2_Template, 1, 0, \"div\", 5);\n    i0.ɵɵtemplate(3, EventDisplayComponent_div_3_app_loader_3_Template, 1, 0, \"app-loader\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.events.events);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.needFiller(ctx_r2.parent_objs.length) ? false : true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.flag);\n  }\n}\nexport let EventDisplayComponent = /*#__PURE__*/(() => {\n  class EventDisplayComponent {\n    //check if the event number is odd if so place an empty evemt to align the loader\n    needFiller(len) {\n      if (len % 2 == 1 && window.innerWidth > 800) return true;\n      return false;\n    }\n    //return the width of the viewport\n    getWidth() {\n      return window.innerWidth;\n    }\n    //set the listener that wait until the bottom of page is loaded whe that happen\n    //api call is made to add more event to the current\n    // setListenerForInfiniteScroll()\n    // {\n    // \tif (this.componentLoaded)\n    // \t\treturn;\n    // \tdocument.querySelector(\".cardContainer\")?.addEventListener('scroll', (event)=>{\n    // \t\tconst lastEl:NodeListOf<HTMLDivElement> = document.querySelectorAll(\".card\");\n    // \t\tconst targetElement = event.target as HTMLElement;\n    // \t\tconst scrollTop = targetElement.scrollTop;\n    // \t\tif ((lastEl[lastEl.length - 1].offsetTop +  lastEl[lastEl.length - 1].offsetHeight>= (scrollTop + window.innerHeight)) || this.flag)\n    // \t \t\treturn ;\n    // \t\tthis.flag = true;\n    // \t\tthis.api.getBaseEvents(String(this.pageCounter))\n    // \t\t.then((data)=>{\n    // \t\t\tfor (let el of data)\n    // \t\t\t\tthis.events.events.push(el);\n    // \t\t\tthis.flag = false;\n    // \t\t\tthis.pageCounter++;\n    // \t\t}).catch((err)=>{\n    // \t\t\tconsole.log(\"ERROR ADDING EVENTS \", err);\n    // \t\t})\n    // \t})\n    // \tthis.componentLoaded = true;\n    // }\n    ngOnInit() {\n      this.events.value ? this.events.value = '' : '';\n      if (document.querySelector(\".sideBar\") != null) {\n        const homeEl = document.querySelector(\".home\");\n        homeEl.style.width = \"90svw\";\n        if (this.getWidth() < 1000) homeEl.style.width = \"100svw\";\n      }\n    }\n    constructor(events, api, gFunc, route) {\n      this.events = events;\n      this.api = api;\n      this.gFunc = gFunc;\n      this.route = route;\n      this.flag = false;\n      this.isLoading = true;\n      this.parent_objs = [];\n      this.componentLoaded = false;\n      this.pageCounter = 0;\n      this.api.getBaseEvents(String(this.pageCounter)).then(data => {\n        this.events.events = data;\n        this.isLoading = false;\n        this.pageCounter++;\n      }).catch(err => {\n        console.log(\"ERROR ADDING EVENTS \", err);\n      });\n      this.route.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          if (event.url == \"/events\") this.events.isSearchVisible = true;else this.events.isSearchVisible = false;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function EventDisplayComponent_Factory(t) {\n      return new (t || EventDisplayComponent)(i0.ɵɵdirectiveInject(i1.EventsService), i0.ɵɵdirectiveInject(i2.ApiCallService), i0.ɵɵdirectiveInject(i3.GeneralFuncService), i0.ɵɵdirectiveInject(i4.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EventDisplayComponent,\n      selectors: [[\"app-event-display\"]],\n      decls: 4,\n      vars: 3,\n      consts: [[1, \"home\", \"eventsView\"], [4, \"ngIf\"], [\"id\", \"scrollableElement\", \"class\", \"cardContainer\", 4, \"ngIf\"], [\"id\", \"scrollableElement\", 1, \"cardContainer\"], [3, \"el\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"filler\", \"style\", \"width: 50svw;height: 30svh;\", 4, \"ngIf\"], [3, \"el\"], [1, \"filler\", 2, \"width\", \"50svw\", \"height\", \"30svh\"]],\n      template: function EventDisplayComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, EventDisplayComponent_app_loader_1_Template, 1, 0, \"app-loader\", 1);\n          i0.ɵɵtemplate(2, EventDisplayComponent_div_2_Template, 1, 0, \"div\", 1);\n          i0.ɵɵtemplate(3, EventDisplayComponent_div_3_Template, 4, 3, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i6.EventCardComponent, i7.LoaderComponent],\n      styles: [\".cardContainer[_ngcontent-%COMP%]{height:89svh;width:100svw;display:flex;justify-content:center;flex-direction:row;flex-wrap:wrap;overflow:scroll}.home[_ngcontent-%COMP%]{display:flex;width:100svw;min-height:89svh;justify-content:center;align-items:center;background-image:url(/assets/cardDisplay.jpg);background-size:cover;background-repeat:no-repeat}\"]\n    });\n  }\n  return EventDisplayComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}