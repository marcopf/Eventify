{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/api-call.service\";\nimport * as i2 from \"./services/notification.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./navbar/navbar.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    onresize() {\n      console.log(window.innerWidth);\n      if (!this.small && window.innerWidth < 1000) {\n        document.location.reload();\n        this.small = true;\n      }\n      if (this.small && window.innerWidth >= 1000) {\n        document.location.reload();\n        this.small = false;\n      }\n    }\n    constructor(api, notification) {\n      this.api = api;\n      this.notification = notification;\n      this.small = window.innerWidth < 1000;\n      this.notificationNeeded = true;\n      this.title = 'Eventify';\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ApiCallService), i0.ɵɵdirectiveInject(i2.NotificationService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      hostBindings: function AppComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"resize\", function AppComponent_resize_HostBindingHandler() {\n            return ctx.onresize();\n          }, false, i0.ɵɵresolveWindow);\n        }\n      },\n      decls: 3,\n      vars: 0,\n      consts: [[1, \"container\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"app-navbar\")(2, \"router-outlet\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      dependencies: [i3.RouterOutlet, i4.NavbarComponent],\n      styles: [\".container[_ngcontent-%COMP%]{width:100svw;height:100svh;overflow:hidden}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}