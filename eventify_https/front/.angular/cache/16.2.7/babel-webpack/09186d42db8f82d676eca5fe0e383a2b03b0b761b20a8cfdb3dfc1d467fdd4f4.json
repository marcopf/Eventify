{"ast":null,"code":"import * as i0 from \"@angular/core\";\n//actual functio that make the date comparison\nfunction isDateInFuture(dateToCheck) {\n  const currentDate = new Date();\n  const inputDate = new Date(dateToCheck);\n  return inputDate > currentDate;\n}\nexport let NewEventService = /*#__PURE__*/(() => {\n  class NewEventService {\n    emptySet(ev) {\n      ev.title = \"\";\n      ev.description = \"\";\n      ev.place = \"\";\n      ev.date = \"\";\n      ev.category = [];\n      ev.time = \"\";\n    }\n    //function that check if the input date for new event is actually in the future\n    checkValue() {\n      const fileEl = document.querySelector(\"#photos\");\n      const dateEl = document.querySelector(\"#date\");\n      let flag = true;\n      Object.keys(this.newEvent).forEach(key => {\n        if (this.newEvent[key] == \"\") flag = false;\n      });\n      if (fileEl.files.length <= 2) flag = false;\n      if (!isDateInFuture(dateEl.value)) flag = false;\n      return flag;\n    }\n    //function that check if the input date for modify event is actually in the future\n    checkValueModify() {\n      const dateEl = document.querySelector(\"#date\");\n      let flag = true;\n      if (!isDateInFuture(dateEl.value)) flag = false;\n      return flag;\n    }\n    constructor() {\n      this.dataErr = false;\n      this.imageErr = false;\n      this.newEvent = {\n        title: \"\",\n        description: \"\",\n        place: \"\",\n        date: \"\",\n        time: \"\",\n        category: []\n      };\n    }\n    static #_ = this.ɵfac = function NewEventService_Factory(t) {\n      return new (t || NewEventService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: NewEventService,\n      factory: NewEventService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NewEventService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}